name: Build

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [ 20.x ]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install dependencies
        run: npm install

      - name: Lint code
        run: npm run lint

      - name: Build Core
        run: npm run build core

      - name: Create Artifact for @mosa-ng/core
        uses: actions/upload-artifact@v4
        with:
          name: mosa-ng-core
          path: dist/@mosa-ng/core

      - name: Build Material
        run: npm run build material

      - name: Create Artifact for @mosa-ng/material
        uses: actions/upload-artifact@v4
        with:
          name: mosa-ng-material
          path: dist/@mosa-ng/material

  publish-npm:
    needs: build
    runs-on: ubuntu-latest
    if: success() && github.event_name == 'pull_request' && startsWith(github.head_ref, 'build/release')

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Use Node.js 20.x
        uses: actions/setup-node@v4
        with:
          node-version: 20.x

      - name: Authenticate with npm Registry
        run: echo "//registry.npmjs.org/:_authToken=${{secrets.NPM_TOKEN}}" > ~/.npmrc
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Get Artifact for core
        uses: actions/download-artifact@v4
        with:
          name: mosa-ng-core

      - name: Publish @mosa-ng/core package to npm Registry
        run: npm publish --access public
        working-directory: ${{ github.workspace }}/dist/@mosa-ng/core

      - name: Publish @mosa-ng/material package to npm Registry
        run: npm publish --access public
        working-directory: ${{ github.workspace }}/dist/@mosa-ng/core
